## Recording Rules for Redis-PostgreSQL Sync Service
##
## Division-by-Zero Protection Strategy:
##
## Many rules use a dual-protection approach against division by zero:
##
## 1. The "> 0" check in the denominator:
##    Example: (rate(...) + rate(...) > 0)
##    - Returns the sum only if it's greater than zero
##    - If sum is zero, the entire expression returns no value (empty result)
##    - This prevents actual division by zero errors
##
## 2. The "OR" fallback:
##    Example: OR on(event_type) (0 * redis_postgres_sync_events_processed_by_type_total)
##    - Activates when the main expression returns no value
##    - Returns 0 for each event_type that exists in the metrics
##    - Ensures we always have a value to display (either the calculated rate or 0)
##
## Why both are needed:
## - "> 0" protects against division errors
## - "OR" ensures metrics exist even when no events have been processed yet
## - Together, they provide graceful handling during startup and low-traffic periods
##
groups:
  - name: redis_postgres_sync_event_type_recording_rules
    interval: 15s
    rules:
      # Rate metrics - events processed per second by type
      - record: redis_postgres_sync:events_processed_rate:by_type
        expr: rate(redis_postgres_sync_events_processed_by_type_total[5m])

      # Rate metrics - events failed per second by type
      - record: redis_postgres_sync:events_failed_rate:by_type
        expr: rate(redis_postgres_sync_events_failed_by_type_total[5m])

      # Rate metrics - database operations per second by type and operation
      - record: redis_postgres_sync:database_operations_rate:by_type
        expr: rate(redis_postgres_sync_database_operations_total[5m])

      # Rate metrics - database operations per second by operation (summed across types)
      - record: redis_postgres_sync:database_operations_rate:by_operation
        expr: sum by (operation) (rate(redis_postgres_sync_database_operations_total[5m]))

      # Failure rate percentage by type
      - record: redis_postgres_sync:failure_rate_percent:by_type
        expr: |
          100 * (
            rate(redis_postgres_sync_events_failed_by_type_total[5m])
            /
            (rate(redis_postgres_sync_events_processed_by_type_total[5m]) +
             rate(redis_postgres_sync_events_failed_by_type_total[5m]) > 0)
          )
          OR on(event_type) (0 * redis_postgres_sync_events_processed_by_type_total)

      # Success rate percentage by type
      - record: redis_postgres_sync:success_rate_percent:by_type
        expr: |
          100 * (
            rate(redis_postgres_sync_events_processed_by_type_total[5m])
            /
            (rate(redis_postgres_sync_events_processed_by_type_total[5m]) +
             rate(redis_postgres_sync_events_failed_by_type_total[5m]) > 0)
          )
          OR on(event_type) (0 * redis_postgres_sync_events_processed_by_type_total)

      # Cascade overhead percentage by type (cascade time as % of total processing time)
      # Note: This metric can exceed 100% due to concurrent operations or timing variations
      - record: redis_postgres_sync:cascade_overhead_percent:by_type
        expr: |
          100 * (
            rate(redis_postgres_sync_cascade_processing_duration_seconds_sum[5m])
            /
            (rate(redis_postgres_sync_event_processing_duration_by_type_seconds_sum[5m]) > 0)
          )
          OR on(event_type) (0 * redis_postgres_sync_cascade_processing_duration_seconds_sum)

      # Event distribution percentage (what % of all events is each type)
      - record: redis_postgres_sync:event_distribution_percent:by_type
        expr: |
          100 * (
            sum by (event_type) (rate(redis_postgres_sync_events_processed_by_type_total[5m]))
            / ignoring(event_type) group_left
            sum(rate(redis_postgres_sync_events_processed_by_type_total[5m]))
          )

      # Processing duration quantiles by type
      - record: redis_postgres_sync:event_processing_duration_seconds:p50:by_type
        expr: histogram_quantile(0.50, rate(redis_postgres_sync_event_processing_duration_by_type_seconds_bucket[5m]))

      - record: redis_postgres_sync:event_processing_duration_seconds:p95:by_type
        expr: histogram_quantile(0.95, rate(redis_postgres_sync_event_processing_duration_by_type_seconds_bucket[5m]))

      - record: redis_postgres_sync:event_processing_duration_seconds:p99:by_type
        expr: histogram_quantile(0.99, rate(redis_postgres_sync_event_processing_duration_by_type_seconds_bucket[5m]))

      # Average processing duration by type
      - record: redis_postgres_sync:event_processing_duration_seconds:avg:by_type
        expr: |
          rate(redis_postgres_sync_event_processing_duration_by_type_seconds_sum[5m])
          /
          (rate(redis_postgres_sync_event_processing_duration_by_type_seconds_count[5m]) > 0)
          OR on(event_type) (0 * redis_postgres_sync_event_processing_duration_by_type_seconds_sum)

      # Cascade duration quantiles by type
      - record: redis_postgres_sync:cascade_duration_seconds:p50:by_type
        expr: histogram_quantile(0.50, rate(redis_postgres_sync_cascade_processing_duration_seconds_bucket[5m]))

      - record: redis_postgres_sync:cascade_duration_seconds:p95:by_type
        expr: histogram_quantile(0.95, rate(redis_postgres_sync_cascade_processing_duration_seconds_bucket[5m]))

      - record: redis_postgres_sync:cascade_duration_seconds:p99:by_type
        expr: histogram_quantile(0.99, rate(redis_postgres_sync_cascade_processing_duration_seconds_bucket[5m]))

      # Average cascade duration by type
      - record: redis_postgres_sync:cascade_duration_seconds:avg:by_type
        expr: |
          rate(redis_postgres_sync_cascade_processing_duration_seconds_sum[5m])
          /
          (rate(redis_postgres_sync_cascade_processing_duration_seconds_count[5m]) > 0)
          OR on(event_type) (0 * redis_postgres_sync_cascade_processing_duration_seconds_sum)

      # SLO compliance - percentage of events processed under 1 second
      - record: redis_postgres_sync:latency_slo_compliance_percent:by_type
        expr: |
          100 * (
            sum by (event_type) (
              rate(redis_postgres_sync_event_processing_duration_by_type_seconds_bucket{le="1.0"}[5m])
            )
            /
            (sum by (event_type) (
              rate(redis_postgres_sync_event_processing_duration_by_type_seconds_count[5m])
            ) > 0)
          )
          OR on(event_type) (0 * redis_postgres_sync_event_processing_duration_by_type_seconds_count)

      # Hourly metrics - total events processed in last hour by type
      - record: redis_postgres_sync:events_processed_1h:by_type
        expr: increase(redis_postgres_sync_events_processed_by_type_total[1h])

      # Hourly metrics - total events failed in last hour by type
      - record: redis_postgres_sync:events_failed_1h:by_type
        expr: increase(redis_postgres_sync_events_failed_by_type_total[1h])

      # Hourly metrics - peak event processing rate in last hour
      - record: redis_postgres_sync:events_processed_rate_1h_max:by_type
        expr: max_over_time(rate(redis_postgres_sync_events_processed_by_type_total[5m])[1h:1m])
